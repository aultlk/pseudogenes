#!python3

import airr, pandas #or csv

#first make a name conversion
names = dict()
for row in META.TSV:
    names[ "VRC"+row[2]+"."+row[3]+"."+row[4]+"."+row[5]  ] =  row[15]+"/"+row[0]+"/"+row[1]+"/"+row[13]


cell_dict = dict()

bcr_data = airr.read_rearrangements("rearrangements_singlecell.tsv")
for r in bcr_data:
    if not r['status'] == "good": next
    #load bedtools output
    reads = dict()
    total_vh_reads = 0
    total_vhkl_reads = 0
    num_vh =0
    num_vhkl=0

    for row in csv.reader( name_dict[ r['cell_id'] ] + "/bedtoolsoutput.csv" ):
    	if this_is_a_v_gene:
	   num_vhkl += 1
	   total_vhkl_reads += int(row[4])
	   if this_is_a_VH:
	      num_vh += 1
	      total_vh_reads += int(row[4])

    	reads[ row[2] ] = int(row[4] ) #check numbers

    for gene in r['v_call'].split(","):
	productive_v_reads += reads[gene]
	if r['locus'] == "IGH":
       	   productive_vh_reads += reads[gene] #add to heavy only dictionary
      
    
    #check if this cell is in the dict already
    if r['cell_id'] in cell_dict:
       cell_dict[ r['cell_id'] ][ 'total_vh_reads' ] += total_vh_reads
       #etc for the others
    else:
	cell_dict[ r['cell_id'] ][ 'total_vh_reads' ] = total_vh_reads
	#etc for the others

    if r['locus'] == "IGH":
       cell_dict[ r['cell_id'] ][ 'heavy_duplicate' ] = r['duplicate_count']
       cell_dict[ r['cell_id'] ][ 'heavy_shm' ] = 100* ( 1 - r['v_identity'] )
    else:
        #same but for light
	#need some slight kludge to handle cells with two light chains


#ok now done with rearrangements, addd everything to meta
output = open....
for row in "META.TSV":
    #don't forget first row is header so add new field names instead of trying to get values from cell_dict
    cell = "VRC"+row[2]+"."+row[3]+"."+row[4]+"."+row[5]
    row += [ cell_dict[cell][column] for column in [ "productive_vh_reads", "total_vh_reads", ...] ]
    output.writerow( row )

